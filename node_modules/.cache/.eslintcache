[{"/Users/youjinli/Desktop/ramp-fe-challenge/src/index.tsx":"1","/Users/youjinli/Desktop/ramp-fe-challenge/src/App.tsx":"2","/Users/youjinli/Desktop/ramp-fe-challenge/src/components/AppContextProvider/index.tsx":"3","/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useTransactionsByEmployee.ts":"4","/Users/youjinli/Desktop/ramp-fe-challenge/src/components/Instructions.tsx":"5","/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts":"6","/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useEmployees.ts":"7","/Users/youjinli/Desktop/ramp-fe-challenge/src/utils/constants.ts":"8","/Users/youjinli/Desktop/ramp-fe-challenge/src/components/InputSelect/index.tsx":"9","/Users/youjinli/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx":"10","/Users/youjinli/Desktop/ramp-fe-challenge/src/utils/context.ts":"11","/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useCustomFetch.ts":"12","/Users/youjinli/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx":"13","/Users/youjinli/Desktop/ramp-fe-challenge/src/utils/fetch.ts":"14","/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useWrappedRequest.ts":"15","/Users/youjinli/Desktop/ramp-fe-challenge/src/utils/requests.ts":"16","/Users/youjinli/Desktop/ramp-fe-challenge/src/components/InputCheckbox/index.tsx":"17","/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useCacheCheckList.ts":"18"},{"size":314,"mtime":1681411868000,"results":"19","hashOfConfig":"20"},{"size":4274,"mtime":1703949738037,"results":"21","hashOfConfig":"20"},{"size":675,"mtime":1681411868000,"results":"22","hashOfConfig":"20"},{"size":930,"mtime":1681411868000,"results":"23","hashOfConfig":"20"},{"size":593,"mtime":1681411868000,"results":"24","hashOfConfig":"20"},{"size":1210,"mtime":1681411868000,"results":"25","hashOfConfig":"20"},{"size":672,"mtime":1681411868000,"results":"26","hashOfConfig":"20"},{"size":135,"mtime":1681411868000,"results":"27","hashOfConfig":"20"},{"size":4132,"mtime":1703918866926,"results":"28","hashOfConfig":"20"},{"size":1158,"mtime":1703919776676,"results":"29","hashOfConfig":"20"},{"size":238,"mtime":1681411868000,"results":"30","hashOfConfig":"20"},{"size":2200,"mtime":1703947174376,"results":"31","hashOfConfig":"20"},{"size":1439,"mtime":1703949052212,"results":"32","hashOfConfig":"20"},{"size":3115,"mtime":1681411868000,"results":"33","hashOfConfig":"20"},{"size":666,"mtime":1681411868000,"results":"34","hashOfConfig":"20"},{"size":1558,"mtime":1703946973025,"results":"35","hashOfConfig":"20"},{"size":841,"mtime":1703948211382,"results":"36","hashOfConfig":"20"},{"size":611,"mtime":1703949036920,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"marnea",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/youjinli/Desktop/ramp-fe-challenge/src/index.tsx",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/App.tsx",["93","94","95"],[],"import { Fragment, useCallback, useEffect, useState, useRef } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\nimport { Transaction } from \"./utils/types\"\nimport useCacheCheckList from './hooks/useCacheCheckList';\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions,  ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [isLoading, setIsLoading] = useState(false)\n  const [transactions, setTransactions] = useState<Transaction[] | []>([]);\n  const {unCheckList, checkedList} = useCacheCheckList();\n  const ref = useRef<string>('');\n  const page = useRef<number>(0);\n\n  const setResult = (arr: Transaction[] | [])=> {\n    arr.forEach(r=>{\n      if(unCheckList.has(r.id)){\n        r.approved = false;\n      }else if(checkedList.has(r.id)){\n        r.approved = true;\n      }   \n    }) \n    return arr;\n  }\n\n  useEffect(()=> {\n    if(paginatedTransactions?.data) {\n      page.current = paginatedTransactions.nextPage || -1;\n      setTransactions(setResult([...transactions, ...paginatedTransactions.data]));\n    }else if(transactionsByEmployee){\n      page.current = -1;\n      setTransactions(setResult([...transactions, ...transactionsByEmployee]));\n    }else{\n      page.current = -1;\n      setTransactions([]);\n    }\n  }, [paginatedTransactions, transactionsByEmployee]);\n\n  useEffect(()=> {\n    setIsLoading(true)\n    const req = async() => {\n      await employeeUtils.fetchAll();\n      setIsLoading(false)\n    }\n    req();\n  }, []);\n  \n  const loadAllTransactions = useCallback(async () => {\n    transactionsByEmployeeUtils.invalidateData()\n    await paginatedTransactionsUtils.fetchAll()\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n            if(ref.current !== newValue.id) {\n              page.current = 0;\n              setTransactions([]);\n            }\n            ref.current = newValue.id;\n            if(newValue.id) {\n              await loadTransactionsByEmployee(newValue.id)\n            }else{\n              await loadAllTransactions();\n            }\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {(transactions?.length > 0 && page.current >= 0) && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                  await loadAllTransactions();\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n","/Users/youjinli/Desktop/ramp-fe-challenge/src/components/AppContextProvider/index.tsx",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useTransactionsByEmployee.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/components/Instructions.tsx",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useEmployees.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/utils/constants.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/components/InputSelect/index.tsx",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/components/Transactions/index.tsx",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/utils/context.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useCustomFetch.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/utils/fetch.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useWrappedRequest.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/utils/requests.ts",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/components/InputCheckbox/index.tsx",[],[],"/Users/youjinli/Desktop/ramp-fe-challenge/src/hooks/useCacheCheckList.ts",[],[],{"ruleId":"96","severity":1,"message":"97","line":45,"column":6,"nodeType":"98","endLine":45,"endColumn":53,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":54,"column":6,"nodeType":"98","endLine":54,"endColumn":8,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":59,"column":6,"nodeType":"98","endLine":59,"endColumn":78,"suggestions":"103"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setResult' and 'transactions'. Either include them or remove the dependency array. You can also do a functional update 'setTransactions(t => ...)' if you only need 'transactions' in the 'setTransactions' call.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'employeeUtils'. Either include it or remove the dependency array.",["105"],"React Hook useCallback has an unnecessary dependency: 'employeeUtils'. Either exclude it or remove the dependency array.",["106"],{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [paginatedTransactions, setResult, transactions, transactionsByEmployee]",{"range":"113","text":"114"},"Update the dependencies array to be: [employeeUtils]",{"range":"115","text":"116"},"Update the dependencies array to be: [paginatedTransactionsUtils, transactionsByEmployeeUtils]",{"range":"117","text":"118"},[1847,1894],"[paginatedTransactions, setResult, transactions, transactionsByEmployee]",[2055,2057],"[employeeUtils]",[2221,2293],"[paginatedTransactionsUtils, transactionsByEmployeeUtils]"]