{"ast":null,"code":"var _jsxFileName = \"/Users/youjinli/Desktop/ramp-fe-challenge/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useState, useRef } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport useCacheCheckList from './hooks/useCacheCheckList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const {\n    unCheckList,\n    checkedList\n  } = useCacheCheckList(); // const [checkedList, setChecedList] = useState(new Set());\n  // const [uncheckList, setUnCheckList] = useState(new Set());\n\n  const ref = useRef('');\n  const page = useRef(0);\n  useEffect(() => {\n    if (paginatedTransactions !== null && paginatedTransactions !== void 0 && paginatedTransactions.data) {\n      page.current = paginatedTransactions.nextPage || -1;\n      const result = [...transactions, ...paginatedTransactions.data];\n      setTransactions(result);\n    } else if (transactionsByEmployee) {\n      page.current = -1;\n      const result = [...transactions, ...transactionsByEmployee];\n      setTransactions(result);\n    } else {\n      page.current = -1;\n      setTransactions([]);\n    }\n  }, [paginatedTransactions, transactionsByEmployee]);\n  useEffect(() => {\n    setIsLoading(true);\n\n    const req = async () => {\n      await employeeUtils.fetchAll();\n      setIsLoading(false);\n    };\n\n    req();\n  }, []);\n  const loadAllTransactions = useCallback(async () => {\n    transactionsByEmployeeUtils.invalidateData();\n    await paginatedTransactionsUtils.fetchAll();\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n\n          if (ref.current !== newValue.id) {\n            page.current = 0;\n            setTransactions([]);\n          }\n\n          ref.current = newValue.id;\n\n          if (newValue.id) {\n            await loadTransactionsByEmployee(newValue.id);\n          } else {\n            await loadAllTransactions();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), (transactions === null || transactions === void 0 ? void 0 : transactions.length) > 0 && page.current >= 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading,\n          onClick: async () => {\n            await loadAllTransactions();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GB+sa3f4flU9e2jW63nPOT8lda4=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee, useCacheCheckList];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useState","useRef","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","useCacheCheckList","App","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isLoading","setIsLoading","transactions","setTransactions","unCheckList","checkedList","ref","page","current","nextPage","result","req","fetchAll","loadAllTransactions","invalidateData","loadTransactionsByEmployee","employeeId","fetchById","loading","item","value","id","label","firstName","lastName","newValue","length"],"sources":["/Users/youjinli/Desktop/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useState, useRef } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\nimport { Transaction } from \"./utils/types\"\nimport useCacheCheckList from './hooks/useCacheCheckList';\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions,  ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [isLoading, setIsLoading] = useState(false)\n  const [transactions, setTransactions] = useState<Transaction[] | []>([]);\n  const {unCheckList, checkedList} = useCacheCheckList();\n  // const [checkedList, setChecedList] = useState(new Set());\n  // const [uncheckList, setUnCheckList] = useState(new Set());\n  const ref = useRef<string>('');\n  const page = useRef<number>(0);\n\n  useEffect(()=> {\n    if(paginatedTransactions?.data) {\n      page.current = paginatedTransactions.nextPage || -1;\n      const result = [...transactions, ...paginatedTransactions.data]\n      setTransactions(result);\n    }else if(transactionsByEmployee){\n      page.current = -1;\n      const result = [...transactions, ...transactionsByEmployee];\n      setTransactions(result);\n    }else{\n      page.current = -1;\n      setTransactions([]);\n    }\n  }, [paginatedTransactions, transactionsByEmployee]);\n\n  useEffect(()=> {\n    setIsLoading(true)\n    const req = async() => {\n      await employeeUtils.fetchAll();\n      setIsLoading(false)\n    }\n    req();\n  }, []);\n  \n  const loadAllTransactions = useCallback(async () => {\n    transactionsByEmployeeUtils.invalidateData()\n    await paginatedTransactionsUtils.fetchAll()\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n            if(ref.current !== newValue.id) {\n              page.current = 0;\n              setTransactions([]);\n            }\n            ref.current = newValue.id;\n            if(newValue.id) {\n              await loadTransactionsByEmployee(newValue.id)\n            }else{\n              await loadAllTransactions();\n            }\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {(transactions?.length > 0 && page.current >= 0) && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                  await loadAllTransactions();\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}